1)

Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,EMP_DESC_CNT,EMP_PLACE_CNT

EMP_DESC_CNT --- > No Of Employess Each Designation
EMP_PLACE_CNT ---> No Of Employess Each Place

List All the Employees in The employess

If there is null in Place or Designation show as 'OTHERS'


select e.emp_id,e.emp_name,
count(*) over(partition by d.desc_id) as emp_desc_cnt,
count(*) over(partition by pl.place_id) as emp_place_cnt,

case when desc_name is null 
then 'others'
else desc_name
end as desc_name1,

case when place_desc is null 
then 'others'
else place_desc
end as place_desc1


from employee e left join designation d
on e.desc_id=d.desc_id
left join place pl on pl.place_id=e.place_id order by e.emp_id;


+--------+---------------+--------------+---------------+------------+-------------+
| emp_id | emp_name      | emp_desc_cnt | emp_place_cnt | desc_name1 | place_desc1 |
+--------+---------------+--------------+---------------+------------+-------------+
|      1 | Vijaykumar    |            3 |             2 | ASE        | Chennai     |
|      2 | Raja          |            3 |             3 | SE         | Hyderabad   |
|      3 | Abhisheksingh |            3 |             1 | ASE        | Mexico      |
|      4 | Santosh       |            2 |             2 | SSE        | Bangalore   |
|      5 | Kribakaran    |            3 |             3 | SE         | Hyderabad   |
|      6 | Divya         |            1 |             2 | TL         | Newyork     |
|      7 | Suganya       |            3 |             3 | ASE        | Hyderabad   |
|      8 | Shalini       |            3 |             2 | SE         | Bangalore   |
|      9 | Avantika      |            2 |             2 | SSE        | Chennai     |
|     10 | Ajay          |            1 |             5 | AM         | others      |
|     11 | Tamilselvan   |            5 |             5 | others     | others      |
|     12 | Vinodha       |            5 |             5 | others     | others      |
|     13 | Karthick      |            5 |             2 | others     | Newyork     |
|     14 | Sanjay        |            5 |             5 | others     | others      |
|     15 | Meera         |            5 |             5 | others     | others      |
+--------+---------------+--------------+---------------+------------+-------------+
15 rows in set (0.00 sec)




2)

Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME

List All the Employees who is working in 'Data' or 'Cloud' project. 

Note: Find Respective  keyword in project name         //if only employees should be working is asked we shld use inner join//


 select e.emp_id,e.emp_name,

case when d.desc_name is null
then 'others'
else desc_name
end as desc_name1,

case when pl.place_desc is null
then 'others'
else place_desc
end as place_desc1,

case when p.proj_name is null
then 'others'
else proj_name
end as project_name


from employee e left join designation d
on e.desc_id=d.desc_id
left join place pl 
on e.place_id=pl.place_id
left join project1 p                 //inner join project1 p on e.proj_id=p.proj_id and (proj_name like any ('%data%','%cloud%'));             
on e.proj_id=p.proj_id
where p.proj_name like '%Data%' or p.proj_name like '%Cloud%' order by e.emp_id;   //use 'like any' here//


+--------+---------------+------------+-------------+------------------------+
| emp_id | emp_name      | desc_name1 | place_desc1 | project_name           |
+--------+---------------+------------+-------------+------------------------+
|      1 | Vijaykumar    | ASE        | Chennai     | Pepsi Data Mart        |
|      3 | Abhisheksingh | ASE        | Mexico      | Amazon Cloud Logistics |
|      4 | Santosh       | SSE        | Bangalore   | Neon Data & Analytics  |
|      5 | Kribakaran    | SE         | Hyderabad   | ASG Data Warehousing   |
|      6 | Divya         | TL         | Newyork     | Pepsi Data Mart        |
|      8 | Shalini       | SE         | Bangalore   | ASG Data Warehousing   |
|      9 | Avantika      | SSE        | Chennai     | Amazon Cloud Logistics |
|     13 | Karthick      | others     | Newyork     | ASG Data Warehousing   |
|     14 | Sanjay        | others     | others      | Amazon Cloud Logistics |
+--------+---------------+------------+-------------+------------------------+
9 rows in set (0.00 sec)



3)

Fetch EMP_NAME,PLACE_DESC

Show only employees working as higest grade in each place,  If two employees in same grade use minimum Project_id to pick one,

Use DESC_ID, PLACE_ID & PROJECT_ID to define Grades "								


select * from (
select EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME,dense_rank() over (partition by e.place_id order by e.desc_id desc,e.proj_id ) a
from employee e  join designation d on e.desc_id=d.desc_id
join place p on e.place_id=p.place_id
join project1 pp on e.proj_id=pp.proj_id)a where a=1;
 
+--------+---------------+-----------+------------+------------------------+----+
| EMP_ID | EMP_NAME      | DESC_NAME | PLACE_DESC | PROJ_NAME              | rn |
+--------+---------------+-----------+------------+------------------------+----+
|      9 | Avantika      | SSE       | Chennai    | Amazon Cloud Logistics |  1 |
|      4 | Santosh       | SSE       | Bangalore  | Neon Data & Analytics  |  1 |
|      5 | Kribakaran    | SE        | Hyderabad  | ASG Data Warehousing   |  1 |
|      3 | Abhisheksingh | ASE       | Mexico     | Amazon Cloud Logistics |  1 |
|      6 | Divya         | TL        | Newyork    | Pepsi Data Mart        |  1 |
+--------+---------------+-----------+------------+------------------------+----+
5 rows in set (0.00 sec)


4)"Fetch Salesman manger Name  & Customer Name 


Show Only the Priority Customer based on the Purchased Amount "				

select sales_manager_name,cust_name from (
select cust_name,s1.salesman_id,s1.sales_manager_id,s2.salesman_name sales_manager_name,purchased_amount,
dense_rank() over (partition by s1.sales_manager_id order by purchased_amount desc) rn from customer c
join salesman s1 on c.salesman_id=s1.salesman_id join salesman s2
on s1.sales_manager_id=s2.salesman_id)sal
where rn=1;

+--------------------+-----------+
| sales_manager_name | cust_name |
+--------------------+-----------+
| Abraham            | James     |
| Srinath            | Jyothi    |
| Vijay              | Dinesh    |
| Balaji             | Arun      |
+--------------------+-----------+
4 rows in set (0.00 sec)


5)Update the Purchased Monthly target for each sales person based on the Purchase amount 				
	

update salesman s
inner join (select salesman_id,sum(purchased_amount) p from customer group by  salesman_id) c 
on s.salesman_id=c.salesman_id and  monthly_target<p
set s.monthly_target=c.p;

mysql> select * from salesman;
+-------------+---------------+-----------+------------------+----------------+
| Salesman_Id | Salesman_Name | City      | Sales_Manager_id | Monthly_Target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           2 | Abraham       | Bangalore |                4 |          21000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |          15000 |
+-------------+---------------+-----------+------------------+----------------+
6 rows in set (0.00 sec)
